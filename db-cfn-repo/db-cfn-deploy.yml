# GitHub Actions workflow to deploy the TARV2 DynamoDB table
name: Deploy Centralised PRP DDB for TARV2

on:
  # Trigger on push to dev or TAR-* branches for dev environment
  push:
    branches:
      - dev
      - 'TAR-*'
  # Trigger on PR merge for nonprod, staging, and prod
  pull_request:
    types: [closed]
    branches:
      - nonprod
      - staging
      - prod
  # Allow manual trigger with environment input
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev, nonprod, staging, prod)"
        required: true
        type: string
        default: dev
      python_version:
        description: "Python version for the runner"
        required: true
        type: string
        default: "3.11"

permissions:
  id-token: write   # Required for OIDC-based AWS authentication
  contents: write   # Required for checking out the repository

jobs:
  deploy-dev:
    runs-on: default
    if: |
      (github.event_name == 'push' && (github.ref_name == 'dev' || startsWith(github.ref_name, 'TAR-'))) ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'dev')
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to dev
        uses: ./.github/actions/deploy
        with:
          environment: dev
          python-version: ${{ inputs.python_version || '3.11' }}
          gha_trust_role: ${{ vars.GHA_TRUST_ROLE }}
          aws_region: ${{ vars.AWS_REGION }}
          gha_cicd_role: ${{ vars.GHA_CICD_ROLE }}
          cfn_template_path: ${{ vars.CFN_TEMPLATE_PATH }}
          stack_name: ${{ vars.STACK_NAME }}
          table_name: ${{ vars.TABLE_NAME }}
          organization_id: ${{ vars.ORGANIZATION_ID }}
          lambda_role_name: ${{ vars.LAMBDA_ROLE_NAME }}

  deploy-nonprod:
    runs-on: default
    needs: deploy-dev
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'nonprod' && github.event.pull_request.head.ref == 'dev') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'nonprod')
    environment: nonprod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to nonprod
        uses: ./.github/actions/deploy
        with:
          environment: nonprod
          python-version: ${{ inputs.python_version || '3.11' }}
          gha_trust_role: ${{ vars.GHA_TRUST_ROLE }}
          aws_region: ${{ vars.AWS_REGION }}
          gha_cicd_role: ${{ vars.GHA_CICD_ROLE }}
          cfn_template_path: ${{ vars.CFN_TEMPLATE_PATH }}
          stack_name: ${{ vars.STACK_NAME }}
          table_name: ${{ vars.TABLE_NAME }}
          organization_id: ${{ vars.ORGANIZATION_ID }}
          lambda_role_name: ${{ vars.LAMBDA_ROLE_NAME }}

  deploy-staging:
    runs-on: default
    needs: deploy-nonprod
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'staging' && github.event.pull_request.head.ref == 'nonprod') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'staging')
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to staging
        uses: ./.github/actions/deploy
        with:
          environment: staging
          python-version: ${{ inputs.python_version || '3.11' }}
          gha_trust_role: ${{ vars.GHA_TRUST_ROLE }}
          aws_region: ${{ vars.AWS_REGION }}
          gha_cicd_role: ${{ vars.GHA_CICD_ROLE }}
          cfn_template_path: ${{ vars.CFN_TEMPLATE_PATH }}
          stack_name: ${{ vars.STACK_NAME }}
          table_name: ${{ vars.TABLE_NAME }}
          organization_id: ${{ vars.ORGANIZATION_ID }}
          lambda_role_name: ${{ vars.LAMBDA_ROLE_NAME }}

  deploy-prod:
    runs-on: default
    needs: deploy-staging
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'prod' && github.event.pull_request.head.ref == 'staging') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'prod')
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to prod
        uses: ./.github/actions/deploy
        with:
          environment: prod
          python-version: ${{ inputs.python_version || '3.11' }}
          gha_trust_role: ${{ vars.GHA_TRUST_ROLE }}
          aws_region: ${{ vars.AWS_REGION }}
          gha_cicd_role: ${{ vars.GHA_CICD_ROLE }}
          cfn_template_path: ${{ vars.CFN_TEMPLATE_PATH }}
          stack_name: ${{ vars.STACK_NAME }}
          table_name: ${{ vars.TABLE_NAME }}
          organization_id: ${{ vars.ORGANIZATION_ID }}
          lambda_role_name: ${{ vars.LAMBDA_ROLE_NAME }}
