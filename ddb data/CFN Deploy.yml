name: CFN Deploy
on:
  push:
    branches:
      - dev
      - 'ttrs-*'
    paths:
      - 'cloudformation/guardrail-lambda.yml'
  pull_request:
    types: [closed]
    branches:
      - nonprod
      - main
      - prod
    paths:
      - 'cloudformation/guardrail-lambda.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment (dev, nonprod, main, prod)
        required: true
        type: string
permissions:
  id-token: write
  contents: write
  actions: write
jobs:
  deploy:
    runs-on: default
    environment: ${{ github.event.inputs.environment || vars.ENVIRONMENT }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Debug Variables
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Ref Name: ${{ github.ref_name }}"
          echo "PR Merged: ${{ github.event.pull_request.merged }}"
          echo "PR Base Ref: ${{ github.event.pull_request.base.ref }}"
          echo "PR Head Ref: ${{ github.event.pull_request.head.ref }}"
          echo "Selected Environment: ${{ github.event.inputs.environment || vars.ENVIRONMENT }}"
          echo "STACK_NAME_BASE: ${{ vars.STACK_NAME_BASE }}"
          echo "Full Stack Name: ${{ vars.STACK_NAME_BASE }}-${{ github.event.inputs.environment || vars.ENVIRONMENT }}"
          echo "All Variables:"
          env | grep -E 'STACK_NAME_BASE|TEMPLATE_FILE|AWS_REGION|BUCKET_NAME_BASE|TABLE_NAME_BASE|LAMBDA_FUNCTION_NAME_BASE|GHA_|ENVIRONMENT' || echo "No matching variables"
      - name: Validate Variables
        run: |
          if [ -z "${{ vars.STACK_NAME_BASE }}" ]; then
            echo "Error: vars.STACK_NAME_BASE is not set"
            exit 1
          fi
          echo "Validated STACK_NAME_BASE: ${{ vars.STACK_NAME_BASE }}"
      - name: Determine Environment
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.environment }}"
          elif [ "${{ github.event_name }}" = "push" ] && { [ "${{ github.ref_name }}" = "dev" ] || [[ "${{ github.ref_name }}" =~ ^ttrs-.* ]]; }; then
            ENV="dev"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            if [ "${{ github.event.pull_request.base.ref }}" = "nonprod" ] && [ "${{ github.event.pull_request.head.ref }}" = "dev" ]; then
              ENV="nonprod"
            elif [ "${{ github.event.pull_request.base.ref }}" = "main" ] && [ "${{ github.event.pull_request.head.ref }}" = "nonprod" ]; then
              ENV="main"
            elif [ "${{ github.event.pull_request.base.ref }}" = "prod" ] && [ "${{ github.event.pull_request.head.ref }}" = "main" ]; then
              ENV="prod"
            else
              echo "Skipping: Invalid PR merge for environment"
              exit 0
            fi
          else
            echo "Skipping: No matching event"
            exit 0
          fi
          echo "ENV=$ENV" >> $GITHUB_ENV
      - name: Deploy CFN Template
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ vars.AWS_REGION }}
          bucket-name: ${{ vars.BUCKET_NAME_BASE }}-${{ env.ENV }}
          table-name: ${{ vars.TABLE_NAME_BASE }}-${{ env.ENV }}
          lambda-function-name: ${{ vars.LAMBDA_FUNCTION_NAME_BASE }}-${{ env.ENV }}
          environment: ${{ env.ENV }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          bucket-name-base: ${{ vars.BUCKET_NAME_BASE }}
          table-name-base: ${{ vars.TABLE_NAME_BASE }}
          stack-name-base: ${{ vars.STACK_NAME_BASE }}
          template-file: guardrail-lambda.yml
          deploy-lambda: true