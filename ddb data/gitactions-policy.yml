name: Deploy Policies
on:
  push:
    branches:
      - dev
      - 'ttrs-*'
  pull_request:
    types: [closed]
    branches:
      - nonprod
      - main
      - prod
  workflow_dispatch:
    inputs:
      environment:
        description: Environment (dev, nonprod, main, prod)
        required: true
        type: string
      python_version:
        description: Python version
        required: true
        type: string
      aws_region:
        description: AWS region
        required: true
        type: string
      bucket_name_base:
        description: Base name for S3 bucket
        required: true
        type: string
      table_name_base:
        description: Base name for DynamoDB table
        required: true
        type: string
      lambda_function_name_base:
        description: Base name for Lambda function
        required: true
        type: string
      stack_name_base:
        description: Base name for CloudFormation stack
        required: true
        type: string
      gha_trust_role:
        description: IAM role for OIDC authentication
        required: true
        type: string
      gha_cicd_role:
        description: IAM role for CI/CD operations
        required: true
        type: string
permissions:
  id-token: write
  contents: write
  actions: write
jobs:
  DeployDev:
    runs-on: default
    environment: dev
    if: |
      (github.event_name == 'push' && (github.ref_name == 'dev' || startsWith(github.ref_name, 'ttrs-'))) ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'dev')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/deploy
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Update Policies
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ vars.AWS_REGION }}
          bucket-name: ${{ vars.BUCKET_NAME_BASE }}-dev
          table-name: ${{ vars.TABLE_NAME_BASE }}-dev
          lambda-function-name: ${{ vars.LAMBDA_FUNCTION_NAME_BASE }}-dev
          environment: dev
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          bucket-name-base: ${{ vars.BUCKET_NAME_BASE }}
          table-name-base: ${{ vars.TABLE_NAME_BASE }}
          stack-name-base: ${{ vars.STACK_NAME_BASE }}
  DeployNonprod:
    runs-on: default
    environment: nonprod
    needs: DeployDev
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'nonprod' && github.event.pull_request.head.ref == 'dev') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'nonprod')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/deploy
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Update Policies
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ vars.AWS_REGION }}
          bucket-name: ${{ vars.BUCKET_NAME_BASE }}-nonprod
          table-name: ${{ vars.TABLE_NAME_BASE }}-nonprod
          lambda-function-name: ${{ vars.LAMBDA_FUNCTION_NAME_BASE }}-nonprod
          environment: nonprod
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          bucket-name-base: ${{ vars.BUCKET_NAME_BASE }}
          table-name-base: ${{ vars.TABLE_NAME_BASE }}
          stack-name-base: ${{ vars.STACK_NAME_BASE }}
  DeployMain:
    runs-on: default
    environment: main
    needs: DeployNonprod
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'nonprod') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'main')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/deploy
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Update Policies
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ vars.AWS_REGION }}
          bucket-name: ${{ vars.BUCKET_NAME_BASE }}-main
          table-name: ${{ vars.TABLE_NAME_BASE }}-main
          lambda-function-name: ${{ vars.LAMBDA_FUNCTION_NAME_BASE }}-main
          environment: main
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          bucket-name-base: ${{ vars.BUCKET_NAME_BASE }}
          table-name-base: ${{ vars.TABLE_NAME_BASE }}
          stack-name-base: ${{ vars.STACK_NAME_BASE }}
  DeployProd:
    runs-on: default
    environment: prod
    needs: DeployMain
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'prod' && github.event.pull_request.head.ref == 'main') ||
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'prod')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/deploy
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Update Policies
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ vars.AWS_REGION }}
          bucket-name: ${{ vars.BUCKET_NAME_BASE }}-prod
          table-name: ${{ vars.TABLE_NAME_BASE }}-prod
          lambda-function-name: ${{ vars.LAMBDA_FUNCTION_NAME_BASE }}-prod
          environment: prod
          python-version: ${{ vars.PYTHON_VERSION }}
          gha-trust-role: ${{ vars.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ vars.GHA_CICD_ROLE }}
          bucket-name-base: ${{ vars.BUCKET_NAME_BASE }}
          table-name-base: ${{ vars.TABLE_NAME_BASE }}
          stack-name-base: ${{ vars.STACK_NAME_BASE }}
