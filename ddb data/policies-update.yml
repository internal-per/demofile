name: Policies Update
on:
  push:
    branches:
      - dev
      - 'ttrs-*'
    paths:
      - 'policies/**'
  pull_request:
    types: [closed]
    branches:
      - nonprod
      - main
      - prod
    paths:
      - 'policies/**'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment (dev, nonprod, main, prod)
        required: true
        type: string
permissions:
  id-token: write
  contents: write
  actions: write
env:
  STACK_NAME_BASE: guardrail-lambda-stack
  AWS_REGION: ap-southeast-2
  BUCKET_NAME_BASE: guardrail-policy-deploy-temp
  TABLE_NAME_BASE: prp-db-org-policy
  LAMBDA_FUNCTION_NAME_BASE: GuardrailPolicyUpdate
  TEMPLATE_FILE: guardrail-lambda.yml
  GHA_TRUST_ROLE: arn:aws:iam::123456789012:role/GHATrustRole
  GHA_CICD_ROLE: arn:aws:iam::123456789012:role/GHACICDRole
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Determine Environment
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.environment }}"
          elif [ "${{ github.event_name }}" = "push" ] && { [ "${{ github.ref_name }}" = "dev" ] || [[ "${{ github.ref_name }}" =~ ^ttrs-.* ]]; }; then
            ENV="dev"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            if [ "${{ github.event.pull_request.base.ref }}" = "nonprod" ] && [ "${{ github.event.pull_request.head.ref }}" = "dev" ]; then
              ENV="nonprod"
            elif [ "${{ github.event.pull_request.base.ref }}" = "main" ] && [ "${{ github.event.pull_request.head.ref }}" = "nonprod" ]; then
              ENV="main"
            elif [ "${{ github.event.pull_request.base.ref }}" = "prod" ] && [ "${{ github.event.pull_request.head.ref }}" = "main" ]; then
              ENV="prod"
            else
              echo "Skipping: Invalid PR merge for environment"
              exit 0
            fi
          else
            echo "Skipping: No matching event"
            exit 0
          fi
          echo "ENV=$ENV" >> $GITHUB_ENV
      - name: Update Policies
        uses: ./.github/actions/update-policies
        with:
          aws-region: ${{ env.AWS_REGION }}
          bucket-name: ${{ env.BUCKET_NAME_BASE }}-${{ env.ENV }}
          table-name: ${{ env.TABLE_NAME_BASE }}-${{ env.ENV }}
          lambda-function-name: ${{ env.LAMBDA_FUNCTION_NAME_BASE }}-${{ env.ENV }}
          environment: ${{ env.ENV }}
          gha-trust-role: ${{ env.GHA_TRUST_ROLE }}
          gha-cicd-role: ${{ env.GHA_CICD_ROLE }}
          bucket-name-base: ${{ env.BUCKET_NAME_BASE }}
          table-name-base: ${{ env.TABLE_NAME_BASE }}
          stack-name-base: ${{ env.STACK_NAME_BASE }}
          template-file: ${{ env.TEMPLATE_FILE }}
          deploy-lambda: false
