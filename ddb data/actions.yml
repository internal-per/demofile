name: Update Policies
description: Syncs policy files to S3 and updates DynamoDB via Lambda
inputs:
  aws-region:
    description: AWS region for deployment
    required: true
  bucket-name:
    description: S3 bucket name for policy files
    required: true
  table-name:
    description: DynamoDB table name
    required: true
  lambda-function-name:
    description: Lambda function name
    required: true
  environment:
    description: Environment (dev, nonprod, main, prod)
    required: true
runs:
  using: composite
  steps:
    - name: Verify Policy Directory
      run: ls -la policies/ || echo "No policies/ directory"
      shell: bash
    - name: Check S3 Bucket
      id: check-bucket
      run: |
        if aws s3api head-bucket --bucket "${{ inputs.bucket-name }}" --region "${{ inputs.aws-region }}" 2>/dev/null; then
          echo "bucket_exists=true" >> $GITHUB_OUTPUT
          aws s3 rm s3://"${{ inputs.bucket-name }}"/policies/ --recursive --region "${{ inputs.aws-region }}" || true
        else
          echo "bucket_exists=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Trigger Lambda Deployment Workflow
      if: steps.check-bucket.outputs.bucket_exists == 'false'
      run: |
        REF=$([ "${{ inputs.environment }}" = "dev" ] && echo "dev" || [ "${{ inputs.environment }}" = "nonprod" ] && echo "nonprod" || [ "${{ inputs.environment }}" = "main" ] && echo "main" || echo "prod")
        curl -X POST -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/gitactions-lambda.yml/dispatches" \
          -d "{\"ref\":\"$REF\",\"inputs\":{\"environment\":\"${{ inputs.environment }}\",\"python_version\":\"${{ github.event.inputs.python_version }}\",\"aws_region\":\"${{ inputs.aws-region }}\",\"bucket_name_base\":\"${{ github.event.inputs.bucket_name_base }}\",\"stack_name_base\":\"${{ github.event.inputs.stack_name_base }}\",\"table_name_base\":\"${{ github.event.inputs.table_name_base }}\",\"template_file\":\"guardrail-lambda.yml\"}}"
      shell: bash
    - name: Wait for Bucket Creation
      if: steps.check-bucket.outputs.bucket_exists == 'false'
      run: |
        for i in {1..30}; do
          if aws s3api head-bucket --bucket "${{ inputs.bucket-name }}" --region "${{ inputs.aws-region }}" 2>/dev/null; then
            exit 0
          fi
          sleep 10
        done
        echo "Error: Bucket ${{ inputs.bucket-name }} not created in time"
        exit 1
      shell: bash
    - name: Sync Policies to S3
      run: |
        aws s3 sync policies/ s3://"${{ inputs.bucket-name }}"/policies/ --region "${{ inputs.aws-region }}"
        aws s3 ls s3://"${{ inputs.bucket-name }}"/policies/ --region "${{ inputs.aws-region }}" || echo "No files in S3"
      shell: bash
    - name: Invoke Lambda
      run: |
        aws lambda invoke \
          --function-name "${{ inputs.lambda-function-name }}" \
          --payload "{\"table_name\": \"${{ inputs.table-name }}\", \"bucket_name\": \"${{ inputs.bucket-name }}\"}" \
          --region "${{ inputs.aws-region }}" response.json && cat response.json
      shell: bash
