AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template to create an IAM Role for GitHub OIDC integration
  with specific permissions for DynamoDB, S3, Lambda, CloudFormation, CloudWatch Logs, IAM, and STS,
  including IAM and CloudFormation delete permissions and S3 bucket creation/deletion.

Resources:
  GithubTrustRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "GithubTrustRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub":
                  - "repo:General/aws-ddb-tetris-tarv2:*"
                  - "repo:General/aws-guardrail-policy-security:*"
      Policies:
        - PolicyName: "AllowAssumeRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                  - "sts:TagSession"
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/GHA-CICD
        - PolicyName: "DenyOutsideAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Deny"
                Action: "*"
                Resource: "*"
                Condition:
                  StringNotEquals:
                    aws:SourceVpc:
                      - "vpc-012344"

  GithubCICD:
    Type: "AWS::IAM::Role"
    DependsOn: GithubTrustRole
    Properties:
      RoleName: "GHA-CICD"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
            Principal:
              AWS: !GetAtt GithubTrustRole.Arn
      ManagedPolicyArns:
        - !Ref prpdynamodbaccesspolicy
        - !Ref prps3accesspolicy
        - !Ref prplambdaaccesspolicy
        - !Ref prpcloudformationaccesspolicy
        - !Ref prpcloudwatchlogsaccesspolicy
        - !Ref prpiamaccesspolicy
        - !Ref prpstsaccesspolicy

  prpdynamodbaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prpdynamodbaccesspolicy
      Description: Grants access to perform operations on all DynamoDB tables.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
            Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  prps3accesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prps3accesspolicy
      Description: Grants access to manage objects in all S3 buckets and create/delete buckets.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Resource:
              - arn:aws:s3:::*
              - arn:aws:s3:::*/*
          - Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:DeleteBucket
            Resource: "*"

  prplambdaaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prplambdaaccesspolicy
      Description: Grants access to invoke all Lambda functions in the account.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*

  prpcloudformationaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prpcloudformationaccesspolicy
      Description: Grants access to validate, deploy, and delete all CloudFormation stacks.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:ValidateTemplate
              - cloudformation:Deploy
              - cloudformation:DescribeStacks
              - cloudformation:DeleteStack
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*

  prpcloudwatchlogsaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prpcloudwatchlogsaccesspolicy
      Description: Grants access to create and write to CloudWatch Logs for all Lambda functions.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*

  prpiamaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prpiamaccesspolicy
      Description: Grants access to pass and delete roles and policies.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
          - Effect: Allow
            Action:
              - iam:DeleteRole
              - iam:DeletePolicy
            Resource: "*"

  prpstsaccesspolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyName: prpstsaccesspolicy
      Description: Grants access to assume roles and tag sessions for GitHub Actions.
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
              - sts:TagSession
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/GHA-CICD

Outputs:
  GithubTrustRoleArn:
    Description: "The ARN of the GitHub OIDC Role"
    Value: !GetAtt GithubTrustRole.Arn
  GithubCICDArn:
    Description: "The ARN of the Github CICD Role"
    Value: !GetAtt GithubCICD.Arn